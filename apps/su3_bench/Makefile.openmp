#
# Vendor can be nvidia | intel | amd
ifndef VENDOR
  VENDOR = nvidia
endif
# Compiler can be clang | pgi | cray
ifndef COMPILER
  COMPILER = clang
endif
# USE_VERSION = 0 | 1 | 2 | 3
ifndef VERSION
  VERSION = 3
endif

DEFINES = -DUSE_OPENMP -DUSE_VERSION=$(VERSION)
DEPENDS = su3.hpp lattice.hpp mat_nn_openmp.hpp

ifeq ($(VENDOR),nvidia)
  ifeq ($(COMPILER),pgi)
    CC = pgc++
    CFLAGS = -std=c++11 -fast -mp=gpu:cc70
  else ifeq ($(COMPILER),cray) # Cray 9.x or later
    CC = CC
    CFLAGS = -std=c++11 -O3 -fopenmp -fopenmp-targets=nvptx64 -Xopenmp-target -march=sm_70
    DEFINES += -DMILC_COMPLEX
  else ifeq ($(COMPILER),cray-classic) # Cray 9.x or later (classic version)
    CC = CC
    DEFINES += -DMILC_COMPLEX -DUSE_SIMD
    CFLAGS = -O3 -h omp
    DEPENDS += mat_nn_openmp_2.hpp
  else ifeq ($(COMPILER),xl)  # IBM XL compiler (summit)
    CC = xlc++
    CFLAGS = -std=c++11 -Ofast -qsmp=omp:noauto -qoffload -qtgtarch=sm_70 -DGPU
    DEFINES += -DMILC_COMPLEX
  else ifeq ($(COMPILER),gcc) # GNU GCC compiler (summit)
    CC = g++
    CFLAGS = -O3 -fopenmp -foffload="-lm" -lm
    DEFINES += -DMILC_COMPLEX -DUSE_SIMD
  else
    CC = clang++
    CFLAGS = -std=c++11 -O3 -g
    CFLAGS += -fopenmp -fopenmp-targets=nvptx64-nvidia-cuda
    DEFINES += -DMILC_COMPLEX
  endif
else ifeq ($(VENDOR),intel)
  CC = icx
  CFLAGS = -fiopenmp -fopenmp-targets=spir64 -D__STRICT_ANSI__
  DEFINES += -DMILC_COMPLEX
else ifeq ($(VENDOR),amd)
  CC = clang++
  CFLAGS = -std=c++14 -O3
  CFLAGS += -fopenmp -fopenmp-targets=amdgcn-amd-amdhsa -Xopenmp-target=amdgcn-amd-amdhsa -march=gfx906
  DEFINES += -DMILC_COMPLEX
endif 

bench_f32_openmp.exe: su3_nn_bench.cpp $(DEPENDS)
	$(CC) $(CFLAGS) -DPRECISION=1 $(DEFINES) -o $@ su3_nn_bench.cpp $(LIBS)

bench_f64_openmp.exe: su3_nn_bench.cpp $(DEPENDS)
	$(CC) $(CFLAGS) $(DEFINES) -o $@ su3_nn_bench.cpp $(LIBS)

all: bench_f64_openmp.exe bench_f32_openmp.exe

clean:
	rm -f *openmp.exe
